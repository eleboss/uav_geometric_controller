#!/usr/bin/env python
PACKAGE = "odroid"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# size_env = gen.enum([ gen.const("Gazebo",      int_t, 0, "Gazebo Environment"),
#                        gen.const("MOCA",     int_t, 1, "MOCA Environment")],
#                      "Environment Type")
#
# gen.add("environment", int_t, 0, "Environment parameter", 0, 0, 1, edit_method=size_env)

size_enum = gen.enum([ gen.const("Attitude",      int_t, 0, "Attitude control"),
                       gen.const("Position",     int_t, 1, "Postition control")],
                     "Controlle Type")

gen.add("mode", int_t, 0, "Mode parameter", 0, 0, 1, edit_method=size_enum)

# gen.add("str_param",    str_t,    0, "A string parameter",  "Odroid controller")
gen.add("Motor",   bool_t,   0, "Motor on: ",  False)
gen.add("MotorWarmup",   bool_t,   0, "Motor warmup: ",  False)
gen.add("print_imu",   bool_t,   0, "IMU print: ",  False)
gen.add("print_vicon",   bool_t,   0, "Vicon RPY print: ",  False)
gen.add("print_f",   bool_t,   0, "F print: ",  False)
gen.add("print_thr",   bool_t,   0, "Throttle print: ",  False)

# Position
gen.add("x", double_t, 0, "Position x",    0, -5,   5)
gen.add("y", double_t, 0, "Position y",    0, -5,   5)
gen.add("z", double_t, 0, "Position z",    0.2, 0,   5)

gen.add("kP", double_t, 0, "kp",    0.975, 0,   2.5)
gen.add("kW", double_t, 0, "kw",    0.3, 0,   2.5)
gen.add("ki", double_t, 0, "ki",    0.15, 0,   2.5)

gen.add("print_xd",   bool_t,   0, "xd print: ",  False)
gen.add("print_x_v",   bool_t,   0, "Vicon x print: ",  False)
gen.add("print_eX",   bool_t,   0, "eX print: ",  False)
gen.add("print_eV",   bool_t,   0, "eV print: ",  False)
gen.add("print_Rd",   bool_t,   0, "Rd print: ",  False)
gen.add("print_eR",   bool_t,   0, "eR print: ",  False)
gen.add("print_eW",   bool_t,   0, "eW print: ",  False)

gen.add("print_M",   bool_t,   0, "M print: ",  False)
gen.add("print_F",   bool_t,   0, "F print: ",  False)
gen.add("print_f_motor",   bool_t,   0, "f_motor print: ",  False)
gen.add("print_R_eb",   bool_t,   0, "R_eb print: ",  False)

exit(gen.generate(PACKAGE, "odroid", "Gains"))

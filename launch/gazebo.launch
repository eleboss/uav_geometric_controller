<?xml version="1.0"?>

<launch>
<!-- <param name="use_sim_time" value="true" /> -->
  <!-- Start Gazebo with wg world running in (max) realtime -->
  <!-- <include file="$(find hector_gazebo_worlds)/launch/willow_garage.launch"/> -->
  <!-- <arg name="world" default="$(find odroid)/worlds/mesh.world"/> -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>


  <param name="/use_sim_time" value="true" />
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find rrbot_gazebo)/worlds/rrbot.world"/> -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
<param name="robot_description"
  command="$(find xacro)/xacro --inorder '$(find odroid)/robot_description/quad.urdf'" />

<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  args="-urdf -model odroid -param robot_description"/>



  <!-- <node name="gazebo" pkg="gazebo_ros" type="gzserver" args="$(arg world) $(arg args)" respawn="false" output="screen"/> -->

    <!-- start gui -->
  <!-- <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group> -->
  <!-- Spawn simulated quadrotor uav -->
  <!-- <include file="$(find odroid)/launch/spawn_quadrotor.launch" > -->
    <!-- <arg name="model" value="$(find ogm_ae)/robot_description/urdf/quadrotor_with_asus_with_hokuyo_utm30lx.urdf.xacro"/> -->
    <!-- <arg name="model" value="$(find odroid)/robot_description/quad.urdf"/> -->
    <!-- <remap form="/camera/depth/points" to="/cloud_in" /> -->
  <!-- </include> -->

  <!-- <node pkg="multi_layer_map" type="model_state.py" name="robot_fixed"/> -->

</launch>
